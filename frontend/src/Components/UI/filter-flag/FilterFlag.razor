<div class="flag @(_isVisible ? "showFlag" : "hideFlag")">
	<div class="text">
		@filter_option.First().Value
	</div>
	<div class="close" @onclick="() => HideFlag(filter_option)">x</div>
</div>

@code {
	[Parameter]
	public Dictionary<String, String> filter_option { get; set; }

	[Parameter]
	public EventCallback<Dictionary<String, String>> closed_filter { get; set; }

	private bool _isVisible = true;

	protected override void OnInitialized()
	{
		_isVisible = true;
	}

	public async Task HideFlag(Dictionary<String, String> filter)
	{
		_isVisible = !_isVisible;


		if (closed_filter.HasDelegate)
		{
			await closed_filter.InvokeAsync(filter);
		}

		StateHasChanged();
	}
}
