@page "/create-pilot"
@using src.Common.Enums.Category
@using src.Common.Enums.Pilot
@using src.DTO.pilot
@using src.DTO.teams
@inject HttpClient Http

<EditForm Model="@newPilot" OnValidSubmit="@HandleValidSubmit">
	
	
	<div class="rowsection">
		<div class="form-section">
			<label for="name">Nome</label>
			<input id="name" type="text" @oninput="@((e) => newPilot.Name = e.Value.ToString())" placeholder="Nome Completo" class="data" />
		</div>
		<div class="form-section">
			<label for="nationality">Nacionalidade</label>
			<input id="nationality" type="text" @oninput="@((e) => newPilot.Nationality = e.Value.ToString())" placeholder="Nacionalidade" class="data" />
		</div>
	</div>

	<div class="rowsection">
		<div class="form-section">
			<label for="weight">Peso (kg)</label>
			<input id="weight" type="number" @oninput="@((e) => newPilot.Weight = decimal.Parse(e.Value.ToString()))" placeholder="0" class="data" />
		</div>
		<div class="form-section">
			<label for="gender">Gênero</label>
			<select id="gender" @oninput="@((e) => newPilot.Gender = Enum.Parse<Gender>(e.Value.ToString()))" class="data">
				@foreach (var gender in Enum.GetValues<Gender>())
				{
					<option value="@gender">@gender</option>
				}
			</select>
		</div>
	</div>

	<div class="rowsection">
		<div class="form-section">
			<label for="circuit">Circuito</label>
			<input id="circuit" @oninput="@((e) => newPilot.Circuit = e.Value.ToString())" placeholder="Circuito" class="data" />
		</div>
		<div class="form-section">
			<label for="fastestlap">Melhor Volta (HH:MM:SS)</label>
			<input id="fastestlap" @oninput="@((e) => fastestLap = e.Value.ToString())" placeholder="00:00:00" class="data" />
		</div>
	</div>
	
	<div class="rowsection">
		<div class="form-section">
			<label for="team">Equipe</label>
			<select id="team" @oninput="@((e) => newPilot.TeamId = Guid.Parse(e.Value.ToString()))" class="data">
				<option value="" disabled selected>Selecione uma equipe...</option>
				@foreach (var team in teams)
				{
					<option value="@team.Id">@team.Team</option>
				}
			</select>
		</div>
		<div class="form-section">
			<label for="category">Categoria</label>
			<select id="category" @oninput="@((e) => newPilot.Category = Enum.Parse<SingleSeaterCategory>(e.Value.ToString()))" class="data">
				@foreach (var category in Enum.GetValues<SingleSeaterCategory>())
				{
					<option value="@category">@category</option>
				}
			</select>
		</div>
	</div>
	
	
	<button type="submit">Adicionar Piloto</button>
</EditForm>

@code {
	private PilotItems newPilot = new PilotItems();
	private List<TeamsDto> teams = new List<TeamsDto>();

	private string fastestLap = "00:00:00"; // Usado para entrada de texto

	protected override async Task OnInitializedAsync()
	{
		// Carrega a lista de times do backend
		teams = await Http.GetFromJsonAsync<List<TeamsDto>>("http://localhost:5076/teams");
		newPilot.TeamId = teams[0].Id;
	}


	private async Task HandleValidSubmit()
	{
		// Converte a string da volta mais rápida para um TimeSpan antes de enviar
		if (TimeSpan.TryParse(fastestLap, out TimeSpan timeSpanResult))
		{
			newPilot.Fastestlap = timeSpanResult;
		}

		// Envia os dados para a API
		var response = await Http.PostAsJsonAsync("http://localhost:5076/pilots/add", newPilot);

		if (response.IsSuccessStatusCode)
		{
			
			newPilot = new PilotItems();
			fastestLap = "00:00:00";
			
		}
	}
}